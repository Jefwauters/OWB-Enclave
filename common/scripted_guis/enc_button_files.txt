scripted_gui = {
	############################
	# Reformer GUI
	############################
	connect_to_power = {
		context_type = selected_state_context
		window_name = "connect_to_power_container"
		parent_window_token = selected_state_view
		visible = {
			is_owned_and_controlled_by = ROOT
			NOT = {
				is_core_of = ROOT
			}
			OR = {
				free_building_slots = {
					building = civilian_power_grid
					size > 0
					include_locked  = no
				}
				civilian_power_grid > 0
			}
		}
		effects = {
			connect_to_power_click = {
				hidden_effect = { ROOT = { sound_effect = ERB_electric } }
				set_state_flag = needs_civilian_power_grid
				add_core_of = root
			}
		}
		triggers = {
			connect_to_power_click_enabled = {
				civilian_power_grid > 0
				custom_trigger_tooltip = {
					tooltip = more_than_2_electricity
					ROOT = {
						check_variable = {
							var = resource@energy
							value = 2
							compare = greater_than_or_equals
						}
					}
				}
				OR = {
					# any neighbour is cored
					any_neighbor_state = {
						is_core_of = ROOT
					}
					# or its an island
					is_island_state = yes
				}
			}
		}

		ai_check = {
			# check_variable = { ROOT.political_power > 99.99 }
			check_variable = { ai_random > 0.55 }
		}

		ai_weights = {
			connect_to_power_click = {
				ai_will_do = {
					factor = 40
				}
			}
		}
	}
	connected_to_power = {
		context_type = selected_state_context
		window_name = "connected_to_power_container"
		parent_window_token = selected_state_view
		visible = {
			is_core_of = ROOT
			civilian_power_grid > 0
		}
	}
	install_police_force = {
		context_type = selected_state_context
		window_name = "install_police_force_container"
		parent_window_token = selected_state_view
		visible = {
			is_owned_and_controlled_by = ROOT
			is_fully_controlled_by = ROOT
			ROOT =  {
				has_completed_focus = enc_reno_police
				has_completed_focus = enc_rebuild_the_power_grid
			}
			NOT = {
				is_core_of = FROM
				civilian_power_grid > 0
			}
			free_building_slots = {
				building = civilian_power_grid
				size < 1
				include_locked  = no
			}
			# Nothing to delete
			# industrial_complex < 1
			# arms_factory < 1
			# water_generator < 1
			# electricity_generator < 1
			# metal_generator < 1
		}

		effects = {
			install_police_force_click = {
				hidden_effect = {
					sound_effect = ERB_police
					ROOT = {
						add_manpower = -100
					}
				}
				add_extra_state_shared_building_slots = 1
				set_state_flag = enc_police_force_installed
			}
		}
		triggers = {
			install_police_force_click_enabled = {
				ROOT = {
					has_manpower > 100
				}
				NOT = { has_state_flag = enc_police_force_installed }
				free_building_slots = {
					building = civilian_power_grid
					size < 1
					include_locked  = no
				}
			}
		}

		ai_check = {
			check_variable = { ROOT.political_power > 49.99 }
			check_variable = { ai_random > 0.55 }
		}

		ai_weights = {
			install_police_force_click = {
				ai_will_do = {
					factor = 40
				}
			}
		}
	}
	enc_legitimacy = {
		context_type = player_context

		window_name = "legitimacy_container"

		visible = {
			original_tag = ERB
			has_completed_focus = enc_reform
		}

		effects = {
			legitimacy_bg_click = {
				# nothing
			}
		}
	}
	arm_rebels = {
		context_type = selected_state_context

		window_name = arm_rebels_container
		parent_window_token = selected_state_view

		visible = {
			is_core_of = BAR
			ROOT =  {
				has_completed_focus = enc_operation_carnaval
				NOT = {
					has_country_flag = enc_petition_delivered
				}
			}
		}
		effects = {
			arm_rebels_click = {
                ROOT = {
                    hidden_effect = {
						set_temp_variable = { click_cost = 0 }
						subtract_from_temp_variable = { click_cost = enc_rebels_we_have_armed}

                        add_political_power = click_cost?-25
                    }
                }
				set_state_flag = enc_rebels_armed
				if = {
					limit = {
						has_state_flag = enc_rebels_armed
					}
					custom_effect_tooltip = enc_rebels_armed
				}
				else = {
					custom_effect_tooltip = arm_rebels_click
				}
				 ROOT = {
					add_to_variable  = { enc_rebels_we_have_armed = 25}
				}
			}
		}
		triggers = {
			arm_rebels_click_enabled = {
                ROOT = {
					custom_trigger_tooltip = {
						tooltip = arm_rebels_tt_cost
						check_variable = {
							var = political_power
							value = enc_rebels_we_have_armed
							compare = greater_than_or_equals
						}
					}
				}
				NOT = {
					has_state_flag = enc_rebels_armed
				}
			}
		}

		ai_check = {
			check_variable = { ai_random > 0.55 }
		}
		ai_weights = {
			arm_rebels_click = {
				ai_will_do = {
					factor = 40
				}
			}
		}
	}
	arm_slaves = {
        context_type = selected_state_context
        window_name = arm_slaves_container
        parent_window_token = selected_state_view

        visible = {
            is_owned_and_controlled_by = CES
            NOT = {
                has_state_flag = no_rebels_you_fucks
            }
			ROOT =  {
				has_completed_focus = enc_ss_ceasar_bottom_weapons
                NOT = {
                    has_country_flag = enc_ss_ceasar_top_raiding
                }
            }
        }
        effects = {
            arm_slaves_click = {
                ROOT = {
                    hidden_effect = {
						set_temp_variable = { click_cost = 0 }
						subtract_from_temp_variable = { click_cost = enc_slaves_we_have_armed}

                        add_political_power = click_cost?-25
                    }
                }
                set_state_flag = enc_slaves_armed
                if = {
                    limit = {
                        has_state_flag = enc_slaves_armed
                    }
                    custom_effect_tooltip = enc_slaves_armed
                }
                else = {
                    custom_effect_tooltip = arm_slaves_click
                }
				ROOT = {
					add_to_variable  = { enc_slaves_we_have_armed = 25}
				}
            }
        }
        triggers = {
            arm_slaves_click_enabled = {
                ROOT = {
					custom_trigger_tooltip = {
						tooltip = arm_slaves_tt_cost
						check_variable = {
							var = political_power
							value = enc_slaves_we_have_armed
							compare = greater_than_or_equals
						}
					}
				}
                NOT = {
                    has_state_flag = enc_slaves_armed
                }
            }
        }

        ai_check = {
            check_variable = { ai_random > 0.55 }
        }

        ai_weights = {
            arm_slaves_click = {
                ai_will_do = {
                    factor = 40
                }
            }
        }
    }
	arm_patriots = {
        context_type = selected_state_context
        window_name = arm_patriots_container
        parent_window_token = selected_state_view
        visible = {
            is_owned_and_controlled_by = NCR
            ROOT =  {
				has_country_flag = ncr_suspicious
				has_completed_focus = enc_organise_the_sympathizers
            }
			NOT = {
                has_state_flag = no_rebels_you_fucks
            }
        }
        effects = {
            arm_patriots_click = {
                ROOT = {
                    hidden_effect = {
						set_temp_variable = { click_cost = 0 }
						# click cost becomes negative value of enc_p_w_h_a
						subtract_from_temp_variable = { click_cost = enc_patriots_we_have_armed}
                        add_political_power = click_cost?-25
                    }
                }
                set_state_flag = enc_patriots_armed
                if = {
                    limit = {
                        has_state_flag = enc_patriots_armed
                    }
                    custom_effect_tooltip = enc_patriots_armed
                }
                else = {
                    custom_effect_tooltip = arm_patriots_click
                }
				ROOT = {
					add_to_variable  = { enc_patriots_we_have_armed = 25}
				}
            }
        }
        triggers = {
            arm_patriots_click_enabled = {
                ROOT = {
					custom_trigger_tooltip = {
						tooltip = arm_patriots_tt_cost
						check_variable = {
							var = political_power
							value = enc_patriots_we_have_armed
							compare = greater_than_or_equals
						}
					}
				}
                NOT = {
                    has_state_flag = enc_patriots_armed
                }
            }
        }

        ai_check = {
            check_variable = { ai_random > 0.55 }
        }

        ai_weights = {
            arm_patriots_click = {
                ai_will_do = {
                    factor = 40
                }
            }
        }
	}
	erb_light_up_america = {
		context_type = player_context
		parent_window_token = politics_tab
		visible = {
			tag = ERB
			has_completed_focus = enc_rebuild_the_power_grid
		}
		window_name = "erb_screen_power_grid_scripted_gui"

		effects = {
			erb_power_grid_window_click = {
				if = {
					limit = {
						has_variable = power_grid_screen
					}
					clear_variable = power_grid_screen
				}
				else = {
					set_variable = { power_grid_screen = 1 }
					hidden_effect = { ROOT = { sound_effect = ERB_electric } }
				}
				if = {
					limit = {
						check_variable = { power_grid_screen = 1}
					}
					clear_array = erb_power_grid_array
				}
				if = {
					limit = {
						any_owned_state = {
							NOT = { is_core_of = ROOT }
							NOT = { is_in_array = { ROOT.erb_power_grid_array = THIS.id } }
						}
					}
					every_owned_state = {
						limit = {
							NOT = {
								is_core_of = ROOT
							}
						civilian_power_grid > 0
						free_building_slots = {
							size > 0
						}
						any_neighbor_state = {
							is_core_of = ROOT
						}
						NOT = { is_in_array = { ROOT.erb_power_grid_array = THIS.id } }
					}
						add_to_array = { ROOT.erb_power_grid_array = THIS.id }
					}
				}
			}
		}
	}
	power_grid_screen_container = {
		context_type = player_context

		window_name = "power_grid_screen_container"

		visible = {
			has_variable = power_grid_screen
		}

		effects = {
			close_button_click = {
				clear_variable = power_grid_screen
			}
			connect_to_power_grid1_click = {
				visible = {
					NOT = {
						is_core_of = ROOT
					}
					OR = {
						free_building_slots = {
							building = civilian_power_grid
							size > 0
							include_locked  = no
						}
						civilian_power_grid > 0
						# something to delete
						# industrial_complex > 0
						# arms_factory > 0
						# water_generator > 0
						# electricity_generator > 0
						# metal_generator > 0
					}
				}
				triggers = {
					connect_to_power_click_enabled = {
						civilian_power_grid > 0
						custom_trigger_tooltip = {
							tooltip = more_than_2_electricity
							ROOT = {
								check_variable = {
									var = resource@energy
									value = 5
									compare = greater_than_or_equals
								}
							}
						}
						any_neighbor_state = {
							is_core_of = ROOT
						}
					}
				}
				hidden_effect = { root = { sound_effect = ERB_electric } }
				set_state_flag = needs_civilian_power_grid
				add_core_of = root
			}

			entry_bg_button1_click = {
				ROOT = {
					goto_state = PREV
				}
			}
		}
		dynamic_lists = {
			erb_screen_power_grid_scripted_gui_gridbox = {
				array = erb_power_grid_array
				entry_container = erb_power_grid_screen_scripted_gui_entry
				change_scope = yes
			}
		}
	}
	
	############################
	# Exploiting Wasteland
	############################
	harvest_resources = {
        context_type = selected_state_context
        window_name = harvest_resources_container
        parent_window_token = selected_state_view
        visible = {
			harvest_resources_visible_trigger = yes
        }
        effects = { 
            harvest_resources_click = {
				harvest_resources_effects = yes
            }
        }
        triggers = {
            harvest_resources_click_enabled = {
				harvest_resources_click_enabled_trigger = yes
            }
        } 
	} 

	harvest_resources_recall = {
        context_type = selected_state_context
        window_name = harvest_resources_recall_container
        parent_window_token = selected_state_view
        visible = {
			harvest_resources_recall_visible_trigger = yes
        }
        effects = {
            harvest_resources_recall_click = { 
				harvest_resources_recall_effects = yes
            }
        }
		triggers = {
			harvest_resources_recall_click_enabled = {
				
			}
		}
	}
	
	steal_military_industry = {
        context_type = selected_state_context
        window_name = steal_military_industry_container
        parent_window_token = selected_state_view
        visible = {
			steal_industry_visible = yes
        }
        effects = { 
            steal_military_industry_click = {
				steal_military_industry_effect = yes
            }
        }
        triggers = {
            steal_military_industry_click_enabled = {
				steal_military_industry_click_enabled_trigger = yes
            }
        } 
	}

	steal_civilian_industry = {
        context_type = selected_state_context
        window_name = steal_civilian_industry_container
        parent_window_token = selected_state_view
        visible = {
			steal_industry_visible = yes
        }
        effects = { 
            steal_civilian_industry_click = {
				steal_civilian_industry_effect = yes
            }
        }
        triggers = {
            steal_civilian_industry_click_enabled = {
				steal_civilian_industry_click_enabled_trigger = yes
            }
        } 
	} 
	
	establish_outpost = { 
        context_type = selected_state_context
        window_name = establish_outpost_container
        parent_window_token = selected_state_view
        visible = { 
			establish_outpost_visible_trigger = yes
        }
        effects = {
            establish_outpost_click = {
				establish_outpost_effect = yes
            }
        }
        triggers = {
            establish_outpost_click_enabled = {
				establish_outpost_click_enabled_trigger = yes
            }
        } 
	} 

	abandon_outpost = { 
        context_type = selected_state_context
        window_name = abandon_outpost_container
        parent_window_token = selected_state_view
        visible = { 
			abandon_outpost_visible_trigger = yes
        }
        effects = { 
            abandon_outpost_click = {
				abandon_outpost_effect = yes
            }
        }
        triggers = {
            abandon_outpost_click_enabled = {
			
            }
        } 
	} 

}