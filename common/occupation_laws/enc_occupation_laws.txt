enc_no_garrison_occupation = {
	# main_fallback_law = yes
	# default_law = yes
	# starting_law = yes
	visible = {
		always = no
		original_tag = ERB
	}
	icon = 1
	sound_effect = "Martial_Law_Interface_No_Garrison"

	state_modifier = {
		required_garrison_factor = -1
		resistance_target = 1
		no_compliance_gain = 1
		local_resources = -1
		local_factories = -1
		resistance_growth = 25
		resistance_garrison_penetration_chance = -1
	}
	#suppressed_state_modifier = {
	#	#no_compliance_gain = 1
	#	required_garrison_factor = -1
	#}
}

enc_wastelander_pacification = {
	visible = {
		original_tag = ERB
		NOT = { has_completed_focus = enc_reform }
	}
	icon = 7
	sound_effect = "Martial_Law_Interface_No_Garrison"

	state_modifier = {
		resistance_target = -2
		required_garrison_factor = 0.20
		local_resources = -0.50
		no_compliance_gain = 1
		resistance_garrison_penetration_chance = -0.25
		resistance_decay = 3
	}
}

enc_dismantle_industry = {
	tooltip = enc_dismantle_industry_tt
	visible = {
		original_tag = ERB
		NOT = { has_completed_focus = enc_reform }
	}
	icon = 9
	sound_effect = "Martial_Law_Interface_No_Garrison"
	available = {

	}

	state_modifier = {
		resistance_growth = 0
		no_compliance_gain = 1
		required_garrison_factor = 0.50
		resistance_target = -1.5
		local_resources = -0.50
	}

}

enc_enslave_locals = {
	visible = {
		original_tag = ERB
		NOT = { has_completed_focus = enc_reform }
	}
	icon = 10
	sound_effect = ERB_whip

	available = {
		has_completed_focus = enc_slave_labour
	}

	state_modifier = {
		required_garrison_factor = 0.25
		local_resources = 0.20
		compliance_gain = 0.50
		resistance_target = -1
	}
}

enc_no_exploit_resources = {
	visible = {
		original_tag = ERB
		NOT = { has_completed_focus = enc_reform }		
	}
	icon = 8
	sound_effect = "Martial_Law_Interface_No_Garrison"

	state_modifier = {
		resistance_growth = 0
		no_compliance_gain = 1
		resistance_target = -1.5
		local_resources = 0.50
		resistance_garrison_penetration_chance = -0.50
	}

}




#####################################################
### Documentation
#####################################################
##id is used for localization
#example_law = {
#	#tooltip description for the law
#	tooltip = "loc_key"
#
#	#gfx entry & frame for law entry icon
#	#gfx entry can be omitted, in that case it will default to GFX_occupation_policy_icon_strip
#	icon = "GFX_icon:5"
#
#	#plays when the law is selected
#	sound_effect = "sound_effect"
#
#	#if a law is not visible, it won't show up in gui at all
#	#scope is occupier country, occupied country is not set (this is only check at country level, not target level)
#	visible = {
#		always = yes
#	}
#
#	#if a law is not available, it will show up in disable state ingui and won't be selectable
#	#scope is occupier country and from scope is occupied country
#	available = {
#		always = yes
#	}
#
#	#if a current modifier is no longer active (visible/available is false) it will fallback to this law
#	fallback_law = law_id
#
#	#main fallback modifier will be used when previous modifier is no longer active and there is no fallback_law, there must be exactly one fallback modifier
#	#if you are lacking manpower/equipments for your current laws, fallback modifier bonuses will apply instead (will lerp to fallback and at 0 manpower you will be forced to switch)
#	main_fallback_law = yes
#
#	#applies to states if the law is selected
#	state_modifier = {
#
#	}
#
#	#states with resistance supressed (at 0) will get this modifier instead (if defined)
#	suppressed_state_modifier = {
#
#	}
#
#	#by default laws are sorted by load order, gui_order can be used to reorder them in gui. by default it is 0
#	gui_order = 1
#
#	# score used for selecting a law for state
#	# scope is state
#	# from is occupier
#	# from from is occupied
#	# ai_desire_resource temp variables will be available for the triggers,
#	# which is a value in between 0-1 to show desire for a certain resource
#	# uncapped_resistance_target temp variable can be used for getting resistance that that is not capped to 0-100
#	# resistance_target_without_law temp variable can be used for accessing resistance target value that is not modifier by law
#	# garrison_min_support_ratio garrison_equipment_support_ratio garrison_manpower_support_ratio gives what ratio of the garrison factor we can support for current template and buffers
#	ai_will_do = {
#		base = 100
#
#		modifier = {
#			steel > 10
#			add = 100
#		}
#	}
#}
#
#####################################
# List of state modifiers
#####################################
# army_speed_factor_for_controller
# compliance_gain
# compliance_growth
# compliance_growth_on_our_occupied_states
# disable_strategic_redeployment
# disable_strategic_redeployment_for_controller
# enemy_intel_network_gain_factor_over_occupied_tag
# enemy_spy_negative_status_factor
# intel_network_gain
# intel_network_gain_factor
# local_building_slots
# local_building_slots_factor
# local_factories
# local_factory_sabotage
# local_intel_to_enemies
# local_manpower
# local_non_core_manpower
# local_resources
# local_resources_factor
# local_supplies
# local_supplies_for_controller
# mobilization_speed
# no_compliance_gain
# non_core_manpower
# recruitable_population
# recruitable_population_factor
# required_garrison_factor
# resistance_activity
# resistance_damage_to_garrison
# resistance_damage_to_garrison_on_our_occupied_states
# resistance_decay
# resistance_decay_on_our_occupied_states
# resistance_garrison_penetration_chance
# resistance_growth
# resistance_growth_on_our_occupied_states
# resistance_target
# resistance_target_on_our_occupied_states
# starting_compliance
# state_production_speed_buildings_factor

# state_resource_aluminium
# state_resource_chromium
# state_resource_oil
# state_resource_rubber
# state_resource_steel
# state_resource_tungsten
# state_resources_factor
# temporary_state_resource_aluminium
# temporary_state_resource_chromium
# temporary_state_resource_oil
# temporary_state_resource_rubber
# temporary_state_resource_steel
# temporary_state_resource_tungsten
